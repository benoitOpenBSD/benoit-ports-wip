--- sound.cc.orig	Thu Dec 29 03:52:19 2005
+++ sound.cc	Wed Mar  4 00:18:36 2009
@@ -34,16 +34,22 @@
 #include <fcntl.h>
 #include <unistd.h>
 #include <signal.h>
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
-#include <linux/soundcard.h>
-#include <linux/cdrom.h>
-//#include <linux/ucdrom.h>
-#else
+#ifdef __OpenBSD__
+#include <soundcard.h>
+#include <sys/cdio.h>
+#define CDROM_LEADOUT 0xAA
+#define CD_FRAMES 75 /* frames per second */
+#define CDROM_DATA_TRACK 0x4
+#elif __FreeBSD__
 #include <sys/soundcard.h>
 #include <sys/cdio.h>
 #define CDROM_LEADOUT 0xAA
 #define CD_FRAMES 75 /* frames per second */
 #define CDROM_DATA_TRACK 0x4
+#else
+#include <linux/soundcard.h>
+#include <linux/cdrom.h>
+//#include <linux/ucdrom.h>
 #endif
 #include <time.h>
 
@@ -88,7 +94,7 @@
   trackFrame = 0;
   trackCount  = 0;
 
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   cdrom_tochdr cdTochdr;
   if (-1 == ioctl(cdDevice, CDROMREADTOCHDR, &cdTochdr))
 #else
@@ -96,7 +102,7 @@
   if (-1 == ioctl(cdDevice, CDIOREADTOCHEADER, (char *)&cdTochdr))
 #endif
      return;
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   trackCount = cdTochdr.cdth_trk1;
 #else
   trackCount = cdTochdr.ending_track - cdTochdr.starting_track + 1;
@@ -105,7 +111,7 @@
   int i;
   trackFrame = new int[trackCount+1];
   for(i=trackCount;i>=0;i--) {
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
     cdrom_tocentry cdTocentry;
     cdTocentry.cdte_format = CDROM_MSF;
     cdTocentry.cdte_track  = (i == trackCount ? CDROM_LEADOUT : i+1);
@@ -121,7 +127,7 @@
     //Bug fix: thanks to Ben Gertzfield  (9/7/98)
     //Leadout track is sometimes reported as data.
     //Added check for this.
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
     if (-1 == ioctl(cdDevice, CDROMREADTOCENTRY, & cdTocentry) ||
         (i != trackCount && (cdTocentry.cdte_ctrl & CDROM_DATA_TRACK)))
       trackFrame[i] = (i==trackCount?0:trackFrame[i+1]);
@@ -154,7 +160,7 @@
 }
 
 void cdPlay(int frame, int endFrame) {
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   cdrom_msf msf;
 #else
   struct ioc_play_msf msf;
@@ -169,7 +175,7 @@
   // (Sybren Stuvel)
   cdStop();
   
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   msf.cdmsf_min0 = frame / (60*CD_FRAMES);
   msf.cdmsf_sec0 = frame / CD_FRAMES % 60;
   msf.cdmsf_frame0 = frame % CD_FRAMES;
@@ -182,7 +188,7 @@
   //Bug fix: thanks to Martin Mitchell
   //An out by one error that affects some CD players. 
   //Have to use endFrame-1 rather than endFrame (9/7/98)
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   msf.cdmsf_min1 = (endFrame-1) / (60*CD_FRAMES);
   msf.cdmsf_sec1 = (endFrame-1) / CD_FRAMES % 60;
   msf.cdmsf_frame1 = (endFrame-1) % CD_FRAMES;
@@ -196,7 +202,7 @@
 }
 
 void cdGetStatus(int &track, int &frames, SymbolID &state) {
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   cdrom_subchnl subchnl;
   subchnl.cdsc_format = CDROM_MSF;
   if (-1 == ioctl(cdDevice, CDROMSUBCHNL, &subchnl)) {
@@ -216,7 +222,7 @@
     state = (state == Open ? Open : NoCD); /* ? */
     return;
   }
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   track = subchnl.cdsc_trk;
   frames  = subchnl.cdsc_reladdr.msf.minute*60*CD_FRAMES+
             subchnl.cdsc_reladdr.msf.second*CD_FRAMES+
@@ -229,7 +235,7 @@
 #endif
   
   SymbolID oldState = state;
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   switch(subchnl.cdsc_audiostatus) {
     case CDROM_AUDIO_PAUSED    : state = Pause; break;
     case CDROM_AUDIO_PLAY      : state = Play; break;
@@ -260,38 +266,38 @@
 
 void cdStop(void) {
   //attemptNoDie(ioctl(cdDevice, CDROMSTOP),"stopping CD");
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   ioctl(cdDevice, CDROMSTOP);
-#else
-  ioctl(cdDevice, CDIOCSTOP);
+#elif defined(__OpenBSD__) || defined(__FreeBSD__)
+  ioctl(cdDevice, CDIOCSTOP, NULL);
 #endif
 }
 void cdPause(void) {
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   attemptNoDie(ioctl(cdDevice, CDROMPAUSE),"pausing CD",true);
-#else
-  attemptNoDie(ioctl(cdDevice, CDIOCPAUSE),"pausing CD",true);
+#elif defined(__OpenBSD__) || defined(__FreeBSD__)
+  attemptNoDie(ioctl(cdDevice, CDIOCPAUSE, NULL),"pausing CD",true);
 #endif
 }
 void cdResume(void) {
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   attemptNoDie(ioctl(cdDevice, CDROMRESUME),"resuming CD",true);
-#else
-  attemptNoDie(ioctl(cdDevice, CDIOCRESUME),"resuming CD",true);
+#elif defined(__OpenBSD__) || defined(__FreeBSD__)
+  attemptNoDie(ioctl(cdDevice, CDIOCRESUME, NULL),"resuming CD",true);
 #endif
 }
 void cdEject(void) {
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   attemptNoDie(ioctl(cdDevice, CDROMEJECT),"ejecting CD",true);
-#else
-  attemptNoDie(ioctl(cdDevice, CDIOCEJECT),"ejecting CD",true);
+#elif defined(__OpenBSD__) || defined(__FreeBSD__)
+  attemptNoDie(ioctl(cdDevice, CDIOCEJECT, NULL),"ejecting CD",true);
 #endif
 }
 void cdCloseTray(void) {
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if defined(__linux__)
   attemptNoDie(ioctl(cdDevice, CDROMCLOSETRAY),"ejecting CD",true);
-#else
-  attemptNoDie(ioctl(cdDevice, CDIOCCLOSE),"ejecting CD",true);
+#elif defined(__OpenBSD__) || defined(__FreeBSD__)
+  attemptNoDie(ioctl(cdDevice, CDIOCCLOSE, NULL),"ejecting CD",true);
 #endif
 }
 
@@ -489,7 +495,7 @@
   
     int format, stereo, fragment, fqc;
   
-#if defined(__FreeBSD__) || defined(_FreeBSD_kernel__)
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
     attempt(device = open(dspName,O_WRONLY),"opening dsp device",true);
     format = SOUNDFORMAT;
     attempt(ioctl(device,SNDCTL_DSP_SETFMT,&format),"setting format",true);
@@ -515,7 +521,7 @@
     fragment = 0x0003000e;
     attemptNoDie(ioctl(device,SNDCTL_DSP_SETFRAGMENT,&fragment),"setting fragment",true);
     
-#if !defined (__FreeBSD__) && !defined(__FreeBSD_kernel__)
+#if !defined(__FreeBSD__) || !defined(__OpenBSD__)
     attempt(ioctl(device,SNDCTL_DSP_SETFMT,&format),"setting format",true);
     if (format != SOUNDFORMAT) error("setting format (2)");
 #endif
@@ -536,7 +542,11 @@
      
   fcntl(pipeIn, F_SETFL, O_NONBLOCK);
 
-  data = new int16_t[NumSamples*2];  
+#if defined(__FreeBSD__) || defined(__OpenBSD__)
+  data = new u_short[NumSamples*2];
+#else
+  data = new int16_t[NumSamples*2];
+#endif 
   memset((char*)data,0,NumSamples*4);
 }
 
