--- libnetutil/netutil.cc.orig	Fri Jan 21 01:04:16 2011
+++ libnetutil/netutil.cc	Sat Jan 29 23:05:21 2011
@@ -135,6 +135,8 @@
 #include <sys/resource.h>
 #endif
 
+#include "../sctp.h"
+
 #include "netutil.h"
 
 #define NBASE_MAX_ERR_STR_LEN 1024  /* Max length of an error message */
@@ -3424,10 +3426,12 @@
 static bool frame_is_arp(const u8 *frame, int datalink) {
   if (datalink == DLT_EN10MB) {
     return ntohs(*((u16 *) (frame + 12))) == ETH_TYPE_ARP;
+#ifdef DLT_LINUX_SLL
   } else if (datalink == DLT_LINUX_SLL) {
     return ntohs(*((u16 *) (frame + 2))) == ARPHRD_ETHER && /* sll_hatype */
       ntohs(*((u16 *) (frame + 4))) == 6 && /* sll_halen */
       ntohs(*((u16 *) (frame + 14))) == ETH_TYPE_ARP; /* sll_protocol */
+#endif
   } else {
     return false;
   }
@@ -3472,11 +3476,17 @@
 
   if (datalink == DLT_EN10MB) {
     offset = ETH_HDR_LEN;
+#ifdef DLT_LINUX_SLL
   } else if (datalink == DLT_LINUX_SLL) {
     /* The datalink type is Linux "cooked" sockets. See pcap-linktype(7). */
     offset = 16;
+#endif
   } else {
+#ifdef DLT_LINUX_SLL
     netutil_fatal("%s called on interface that is datatype %d rather than DLT_EN10MB (%d) or DLT_LINUX_SLL (%d)", __func__, datalink, DLT_EN10MB, DLT_LINUX_SLL);
+#else
+    netutil_fatal("%s called on interface that is datatype %d rather than DLT_EN10MB (%d)", __func__, datalink, DLT_EN10MB);
+#endif
   }
 
   if (to_usec > 0) {
